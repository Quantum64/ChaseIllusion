{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","application","PIXI","width","window","innerWidth","height","innerHeight","transparent","stage","interactive","mousemove","event","updatePosition","touchmove","mousedown","handleClick","tap","mouseX","mouseY","mode","circles","element","pixiContext","children","length","appendChild","view","loadAssets","_this2","add","Math","floor","random","load","initialize","_this3","map","TilingSprite","resources","texture","renderer","tileScale","x","y","addChild","index","circle","beginFill","lineStyle","drawCircle","endFill","sprite","generateCanvasTexture","push","ticker","animate","data","global","offset","normalize","position","sqrt","pow","tilePosition","orig","_this4","react_default","a","createElement","className","ref","setupPixiContext","Component","point","len","angle","atan2","cos","sin","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.242b2f23.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as PIXI from 'pixi.js'\nimport './App.css';\n\nconst speed = 4;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.application = new PIXI.Application({ width: window.innerWidth + 1, height: window.innerHeight, transparent: false })\n    this.stage = this.application.stage;\n    this.stage.interactive = true;\n    this.stage.mousemove = event => this.updatePosition(event);\n    this.stage.touchmove = event => this.updatePosition(event);\n    this.stage.mousedown = event => this.handleClick(event);\n    this.stage.tap = event => this.handleClick(event);\n    this.mouseX = 0;\n    this.mouseY = 0;\n    this.mode = -1;\n    this.circles = [];\n  }\n\n  setupPixiContext(element) {\n    this.pixiContext = element;\n    if (element && element.children.length === 0) {\n      element.appendChild(this.application.view);\n      this.loadAssets();\n    }\n  }\n\n  loadAssets() {\n    PIXI.loader\n      .add(\"map\", \"assets/seamless\" + Math.floor(Math.random() * 3) + \".jpg\")\n      .load(() => this.initialize());\n  }\n\n  initialize() {\n    this.map = new PIXI.extras.TilingSprite(PIXI.loader.resources[\"map\"].texture, this.application.renderer.width, this.application.renderer.height);\n    this.map.tileScale.x = 0.5;\n    this.map.tileScale.y = 0.5;\n    this.stage.addChild(this.map);\n\n    for (let index = 0; index < 2; index++) {\n      const circle = new PIXI.Graphics();\n      circle.beginFill(index === 0 ? 0xba0000 : 0x0047ba);\n      circle.lineStyle(0);\n      circle.drawCircle(100, 100, 10);\n      circle.endFill();\n\n      const sprite = new PIXI.Sprite(circle.generateCanvasTexture());\n      this.circles.push(sprite);\n      this.stage.addChild(sprite);\n    }\n\n    this.circles[0].x = (this.application.renderer.width / 2) - (this.circles[0].width / 2)\n    this.circles[0].y = (this.application.renderer.height / 2) - (this.circles[0].height / 2)\n\n    this.application.ticker.add(() => this.animate());\n  }\n\n  updatePosition(event) {\n    this.mouseX = event.data.global.x;\n    this.mouseY = event.data.global.y;\n  }\n\n  handleClick(event) {\n    this.mode *= -1;\n  }\n\n  animate() {\n    let offset = normalize({\n      x: this.mouseX - (this.application.renderer.width / 2),\n      y: this.mouseY - (this.application.renderer.height / 2)\n    }, speed)\n    let position = normalize({\n      x: offset.x,\n      y: offset.y\n    }, 30 + Math.sqrt(Math.pow(this.mouseX - (this.application.renderer.width / 2), 2) + Math.pow(this.mouseY - (this.application.renderer.height / 2), 2)) / 10)\n\n    this.map.tilePosition.x += offset.x * this.mode;\n    this.map.tilePosition.y += offset.y * this.mode;\n    this.map.tilePosition.x %= this.map.texture.orig.width;\n    this.map.tilePosition.y %= this.map.texture.orig.height;\n    this.circles[1].x = (this.application.renderer.width / 2) + (position.x) - (this.circles[1].width / 2);\n    this.circles[1].y = (this.application.renderer.height / 2) + (position.y) - (this.circles[1].height / 2);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div ref={(element) => this.setupPixiContext(element)} />;\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nfunction normalize(point, len) {\n  if ((point.x === 0 && point.y === 0)) {\n    return { x: 0, y: 0 };\n  }\n  var angle = Math.atan2(point.y, point.x);\n  var nx = Math.cos(angle) * len;\n  var ny = Math.sin(angle) * len;\n  return { x: nx, y: ny };\n} \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}